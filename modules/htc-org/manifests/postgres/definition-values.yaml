resId: ${context.res.id}
templates:
  cookie: |
    name: {{ .init.name }}
    port: {{ .init.port }}
    user: {{ .init.user }}
    password: {{ .init.password }}
    database: {{ .init.database }}
  init: |-
    {{- if .cookie}}
    name: {{ .cookie.name }}
    port: {{ .cookie.port }}
    user: {{ .cookie.user }}
    password: {{ .cookie.password }}
    database: {{ .cookie.database }}
    {{- else }}
    port: 5432
    user: {{ randAlpha 8 | lower | quote }}
    password: {{ randAlphaNum 16 | quote }}
    database: {{ randAlpha 8 | lower | quote }}
    # StatefulSets names are limited to 52 chars https://github.com/kubernetes/kubernetes/issues/64023
    {{ if regexMatch "modules\\.[a-z0-9-]+\\.externals" .driver.values.resId }}
    name: postgres-{{ index (splitList "." .driver.values.resId) 1 | substr 0 19 }}-{{ index (splitList "." .driver.values.resId) 3 | substr 0 19 }}
    {{- else }}
    name: postgres-{{ index (splitList "." .driver.values.resId) 1 | substr 0 38 }}
    {{- end }}
    {{- end }}
  manifests: |-
    statefulset.yaml:
      location: namespace
      data:
        apiVersion: apps/v1
        kind: StatefulSet
        metadata:
          name: {{ .init.name }}
        spec:
          serviceName: postgres
          selector:
            matchLabels:
              app.kubernetes.io/name: {{ .init.name }}
          template:
            metadata:
              labels:
                app.kubernetes.io/name: {{ .init.name }}
                humanitec.io/trusted-workload: "true"
            spec:
              automountServiceAccountToken: false
              containers:
                - name: {{ .init.name }}
                  image: postgres:17.6-alpine
                  env:
                    - name: POSTGRES_USER
                      value: {{ .init.user | quote }}
                    - name: POSTGRES_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: {{ .init.name }}
                          key: POSTGRES_PASSWORD
                    - name: POSTGRES_DB
                      value: {{ .init.database | quote }}
                    - name: PGDATA
                      value: /var/lib/postgresql/data/pgdata
                    - name: PGPORT
                      value: {{ .init.port | quote }}
                  ports:
                    - containerPort: {{ .init.port }}
                      name: postgres
                  volumeMounts:
                    - name: {{ .init.name }}
                      mountPath: /var/lib/postgresql/data
                  securityContext:
                    runAsUser: 65532
                    runAsGroup: 65532
                    allowPrivilegeEscalation: false
                    privileged: false
                    capabilities:
                      drop:
                        - ALL
              securityContext:
                runAsNonRoot: true
                fsGroup: 65532
                seccompProfile:
                  type: RuntimeDefault
          volumeClaimTemplates:
            - metadata:
                name: {{ .init.name }}
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 1Gi
    service.yaml:
      location: namespace
      data:
        apiVersion: v1
        kind: Service
        metadata:
          name: {{ .init.name }}
        spec:
          ports:
          - port: {{ .init.port }}
          selector:
            app.kubernetes.io/name: {{ .init.name }}
          clusterIP: None
    secret.yaml:
      location: namespace
      data:
        apiVersion: v1
        kind: Secret
        metadata:
          name: {{ .init.name }}
        type: Opaque
        data:
          POSTGRES_PASSWORD: {{ .init.password | b64enc }}
    networkpolicy.yaml:
      location: namespace
      data:
        apiVersion: networking.k8s.io/v1
        kind: NetworkPolicy
        metadata:
          name: ingress-to-{{ .init.name }}
        spec:
          podSelector:
            matchLabels:
              app.kubernetes.io/name: {{ .init.name }}
              humanitec.io/trusted-workload: "true"
          policyTypes:
            - Ingress
          ingress:
            - from:
              - podSelector:
                  matchLabels:
                    {{- if regexMatch "modules\\.[a-z0-9-]+\\.externals" .driver.values.resId }}
                    app.kubernetes.io/name: {{ index (splitList "." .driver.values.resId) 1 }}
                    {{- end }}
                    humanitec.io/trusted-workload: "true"
              ports:
                - port: {{ .init.port }}
  outputs: |-
    host: {{ .init.name }}
    port: {{ .init.port }}
    name: {{ .init.database }}
  secrets: |-
    username: {{ .init.user }}
    password: {{ .init.password }}