gateway: ${resources['config#gke'].outputs.external_gateway_name}
securityPolicy: ${resources['config#gke'].outputs.external_security_policy_name}
host: ${resources['mabenoit-demo/dns'].outputs.host}
routePaths: ${resources['mabenoit-demo/dns<route'].outputs.path}
routePorts: ${resources['mabenoit-demo/dns<route'].outputs.port}
routeServices: ${resources['mabenoit-demo/dns<route'].outputs.service}
templates:
  manifests: |-
    {{- if gt (len .driver.values.routePaths) 0 -}}
    httproute.yaml:
      location: namespace
      data:
        apiVersion: gateway.networking.k8s.io/v1
        kind: HTTPRoute
        metadata:
          name: {{ .id }}-route
        spec:
          parentRefs:
          - kind: Gateway
            name: {{ .driver.values.gateway | toRawJson }}
            namespace: {{ .driver.values.gateway | toRawJson }}
          hostnames:
          - {{ .driver.values.host | toRawJson }}
          rules:
          {{- range $index, $path := .driver.values.routePaths }}
          - matches:
            - path:
                type: PathPrefix
                value: {{ $path | toRawJson }}
            backendRefs:
            - name: {{ index $.driver.values.routeServices $index | toRawJson }}
              port: {{ index $.driver.values.routePorts $index }}
          {{- end }}
    {{- range $index, $service := .driver.values.routeServices | uniq }}
    gcpbackendpolicy-{{ $service }}.yaml:
      location: namespace
      data:
        apiVersion: networking.gke.io/v1
        kind: GCPBackendPolicy
        metadata:
          name: {{ $service }}-backendpolicy
        spec:
          default:
            securityPolicy: {{ $.driver.values.securityPolicy | toRawJson }}
          targetRef:
            group: ""
            kind: Service
            name: {{ $service }}
    networkpolicy-{{ $service }}.yaml:
      location: namespace
      data:
        apiVersion: networking.k8s.io/v1
        kind: NetworkPolicy
        metadata:
          name: ingress-to-{{ $service }}
        spec:
          podSelector:
            matchLabels:
              app.kubernetes.io/name: {{ $service }}
          ingress:
            - from:
                - ipBlock:
                    cidr: 0.0.0.0/0
              ports:
                - port: {{ index $.driver.values.routePorts $index }}
    {{- end }}
    {{- end -}}
  outputs: |-
    id: {{ .id }}-route